[{"C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\index.jsx":"1","C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\App.jsx":"2","C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\route\\Homepage.jsx":"3","C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\components\\LeftSection.jsx":"4","C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\components\\Header.jsx":"5","C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\components\\MainBlock.jsx":"6"},{"size":479,"mtime":1613755968718,"results":"7","hashOfConfig":"8"},{"size":181,"mtime":1613761968032,"results":"9","hashOfConfig":"8"},{"size":409,"mtime":1613762218570,"results":"10","hashOfConfig":"8"},{"size":2010,"mtime":1613761968034,"results":"11","hashOfConfig":"8"},{"size":400,"mtime":1613761968033,"results":"12","hashOfConfig":"8"},{"size":2455,"mtime":1613765039717,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ozcouq",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\index.jsx",[],"C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\App.jsx",[],"C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\route\\Homepage.jsx",[],"C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\components\\LeftSection.jsx",["28"],"/* eslint-disable function-paren-newline */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Button,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  makeStyles,\n} from '@material-ui/core';\nimport products from '../products.json';\n\nconst useStyles = makeStyles({\n  leftSectionBlock: {\n    padding: '2%',\n    margin: '1% 0 0 1%',\n    textAlign: 'center',\n    border: '1px solid black',\n    width: '20vw',\n\n    '& .categorieSection': {\n      paddingTop: '10%',\n    },\n  },\n});\n\nexport default function LeftSection() {\n  const [categories, setCategories] = useState([]);\n  const styles = useStyles();\n  useEffect(() => {\n    setCategories(\n      Array.from(new Set(products.map((p) => p.type))).map((c) => ({\n        type: c,\n        checked: false,\n      })),\n    );\n  }, []);\n\n  const handleChangeCheckboxCategories = (e, index) => {\n    setCategories((prev) =>\n      prev.map((c, i) => {\n        if (i === index) {\n          return {\n            type: e.target.name,\n            checked: e.target.checked,\n          };\n        }\n        return c;\n      }),\n    );\n  };\n\n  const handleClickAddProduct = () => {\n    alert('Add Product');\n  };\n\n  return (\n    <Grid container direction=\"column\" className={styles.leftSectionBlock}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disableElevation\n        onClick={handleClickAddProduct}\n      >\n        Ajouter un Produit\n      </Button>\n      <Grid className=\"categorieSection\" container direction=\"column\">\n        <h3>Cat√©gories</h3>\n        <FormControl>\n          {categories.map((cat, index) => (\n            <FormControlLabel\n              key={cat.type}\n              control={\n                <Checkbox\n                  name={cat.type}\n                  checked={cat.checked}\n                  onChange={(e) => handleChangeCheckboxCategories(e, index)}\n                />\n              }\n              label={cat.type}\n            />\n          ))}\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n}\n",["29","30","31","32","33","34"],"C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\components\\Header.jsx",[],"C:\\Users\\franc\\Documents\\WildCodeSchool\\Mern\\TestTechnique\\src\\components\\MainBlock.jsx",["35","36","37"],{"ruleId":"38","severity":1,"message":"39","line":54,"column":5,"nodeType":"40","messageId":"41","endLine":54,"endColumn":25},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"38","severity":1,"message":"39","line":47,"column":5,"nodeType":"40","messageId":"41","endLine":47,"endColumn":35},{"ruleId":"38","severity":1,"message":"39","line":51,"column":5,"nodeType":"40","messageId":"41","endLine":51,"endColumn":35},{"ruleId":"38","severity":1,"message":"39","line":55,"column":5,"nodeType":"40","messageId":"41","endLine":55,"endColumn":32},"no-alert","Unexpected alert.","CallExpression","unexpected","lines-around-directive",["54"],"no-spaced-func",["55"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"padding-line-between-statements","func-call-spacing"]